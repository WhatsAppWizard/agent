name: Docker Build and Push

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "README.md"
      - ".gitignore"
      - ".env.example"
  pull_request:
    types: [closed]
    branches: [main]
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "README.md"
      - ".gitignore"
      - ".env.example"

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/Wizard-Agent
  COOLIFY_URL: ${{ secrets.COOLIFY_URL }}
  COOLIFY_RESOURCE_ID: ${{ secrets.COOLIFY_RESOURCE_ID }}
  COOLIFY_API_TOKEN: ${{ secrets.COOLIFY_API_TOKEN }}

jobs:
  build-and-push:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile', 'requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache
            type=gha
          cache-to: |
            type=local,dest=/tmp/.buildx-cache-new,mode=max
            type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            DOCKER_BUILDKIT=1
          provenance: false
          sbom: false

      # Temporary fix for https://github.com/docker/build-push-action/issues/252
      # and https://github.com/docker/buildx/issues/756
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Validate Coolify variables
        env:
          COOLIFY_URL: ${{env.COOLIFY_URL}}
        run: |
          echo "Validating that coolify_url doesn't end in '/'"
          echo "$COOLIFY_URL" | grep -P '[^/]$'

      - name: Update source commit SHA in Coolify
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{env.COOLIFY_URL}}/api/v1/applications/${{env.COOLIFY_RESOURCE_ID}}
          method: PATCH
          bearerToken: ${{env.COOLIFY_API_TOKEN}}
          data: >-
            {
            "git_commit_sha": "${{github.sha}}"
            }

      - name: Trigger Coolify deployment via webhook
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{env.COOLIFY_URL}}/api/v1/deploy?uuid=${{env.COOLIFY_RESOURCE_ID}}&force=false
          method: GET
          bearerToken: ${{env.COOLIFY_API_TOKEN}}
